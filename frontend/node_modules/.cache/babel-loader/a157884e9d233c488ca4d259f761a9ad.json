{"ast":null,"code":"var _jsxFileName = \"/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Components/Header.jsx';\nimport { Switch, Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport RegForm from './Components/RegForm.jsx';\nimport Welcome from './Components/Welcome';\nimport Homepage from './Components/Homepage';\nimport Profile from './Components/Profile';\nimport Confirmation from './Components/Confirmation';\nimport History from './Components/History';\nimport LogForm from './Components/LogForm'; // import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        email: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        id: 0\n      },\n      token: \"\",\n      allMeals: [],\n      randomMeal: [],\n      sessionOrder: {}\n    };\n\n    this.chooseMeal = () => {\n      this.setState({\n        randomMeal: this.state.allMeals[Math.floor(Math.random() * this.state.allMeals.length)]\n      });\n    };\n\n    this.handleLoginSubmit = userInfo => {\n      console.log(\"Login form has been submitted\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        console.log(data);\n\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/homepage\");\n          });\n        }\n      });\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      // debugger\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(`/homepage`);\n          });\n        }\n      });\n    };\n\n    this.renderProfile = routerProps => {\n      return React.createElement(Profile, {\n        token: this.state.token,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    };\n  }\n\n  // renderContent = () => {\n  //     if (this.props.user) {\n  //       return <Homepage key={'homepage'} chooseMeal={this.chooseMeal} />;\n  //     } else {\n  //       return this.renderForms\n  //     }\n  // }\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      }).then(r => r.json()).then(data => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\");\n          });\n        }\n      });\n    }\n\n    fetch('http://localhost:3000/api/v1/meals').then(res => res.json()).then(data => {\n      this.setState({\n        allMeals: data\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state, \"APP STATE\");\n    console.log(this.props, \"APP PROPS\");\n    console.log(this.state.allMeals, \"ALL MEALS\");\n    console.log(this.state.randomMeal, \"RANDOM MEAL\");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LogForm, {\n        formName: \"Login Form\",\n        log: this.log,\n        reg: this.reg,\n        handleSubmit: this.handleLoginSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: React.createElement(RegForm, {\n        formName: \"Register Form\",\n        log: this.log,\n        reg: this.reg,\n        handleSubmit: this.handleRegisterSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: this.renderProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/confirmation\",\n      render: () => React.createElement(Confirmation, {\n        user: this.state.user,\n        randomMeal: this.state.randomMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/homepage\",\n      render: () => React.createElement(Homepage, {\n        chooseMeal: this.chooseMeal,\n        user: this.state.user,\n        randomMeal: this.state.randomMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/history\",\n      exact: true,\n      render: () => React.createElement(History, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Welcome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Page not Found\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js"],"names":["React","Header","Switch","Route","withRouter","RegForm","Welcome","Homepage","Profile","Confirmation","History","LogForm","App","Component","state","user","email","first_name","last_name","id","token","allMeals","randomMeal","sessionOrder","chooseMeal","setState","Math","floor","random","length","handleLoginSubmit","userInfo","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","data","error","localStorage","setItem","props","history","push","handleRegisterSubmit","renderProfile","routerProps","componentDidMount","getItem","res","render","reg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Components/Header.jsx'\nimport {Switch, Route} from 'react-router'\nimport {withRouter} from 'react-router-dom'\nimport RegForm from './Components/RegForm.jsx'\nimport Welcome from './Components/Welcome'\nimport Homepage from './Components/Homepage';\nimport Profile from './Components/Profile'\nimport Confirmation from './Components/Confirmation';\nimport History  from './Components/History'\nimport LogForm from './Components/LogForm'\n\n// import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n\n  state = {\n    user: {\n      email: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      id: 0\n    },\n    token: \"\",\n    allMeals: [],\n    randomMeal: [],\n    sessionOrder: {}\n  }\n\n  chooseMeal = () => {\n    this.setState({ randomMeal: this.state.allMeals[Math.floor(Math.random()*this.state.allMeals.length)] }) \n  }\n\n\n\n\n    // renderContent = () => {\n    //     if (this.props.user) {\n    //       return <Homepage key={'homepage'} chooseMeal={this.chooseMeal} />;\n    //     } else {\n    //       return this.renderForms\n    //     }\n    // }\n\n\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\")\n\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      })\n      .then(r => r.json())\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token)\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\")\n          })\n        }\n      })\n    }\n\n    fetch('http://localhost:3000/api/v1/meals')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          allMeals: data\n        });\n      })\n    }\n\n\n\n  handleLoginSubmit = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(\"/homepage\")\n        })\n\n      }\n    })\n\n  }\n\n  handleRegisterSubmit = (userInfo) => {\n    // debugger\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(`/homepage`)\n        })\n      }\n    })\n  }\n\n  // renderForms = (routerProps) => {\n  //   if(routerProps.location.pathname === \"/login\"){\n  //     return <LogForm formName=\"Login Form\" log={this.log} reg={this.reg} handleSubmit={this.handleLoginSubmit}/>\n  //   } else if (routerProps.location.pathname === \"/register\") {\n  //     return <RegForm formName=\"Register Form\" log={this.log} reg={this.reg} handleSubmit={this.handleRegisterSubmit}/>\n  //   }\n  // }\n\n  renderProfile = (routerProps) => {\n    return <Profile token={this.state.token} user={this.state.user} />\n  }\n\n  render(){\n    console.log(this.state, \"APP STATE\")\n    console.log(this.props, \"APP PROPS\")\n    console.log(this.state.allMeals, \"ALL MEALS\")\n    console.log(this.state.randomMeal, \"RANDOM MEAL\")\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path=\"/login\" render={()=><LogForm formName=\"Login Form\" log={this.log} reg={this.reg} handleSubmit={this.handleLoginSubmit}/>} />\n          <Route path=\"/register\" render={<RegForm formName=\"Register Form\" log={this.log} reg={this.reg} handleSubmit={this.handleRegisterSubmit}/>} />\n          <Route path=\"/profile\" render={ this.renderProfile } />\n          <Route path=\"/confirmation\" render={() => <Confirmation user={this.state.user} randomMeal={this.state.randomMeal} />}  />\n          <Route path=\"/homepage\" render={() => <Homepage chooseMeal={this.chooseMeal} user={this.state.user} randomMeal={this.state.randomMeal}/>}  />\n          <Route path=\"/history\" exact render={() => <History/> } />\n          <Route path=\"/\" exact render={() => <Welcome/> } />\n          <Route render={ () => <p>Page not Found</p> } />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}