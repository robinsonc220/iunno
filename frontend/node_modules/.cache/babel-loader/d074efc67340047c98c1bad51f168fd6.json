{"ast":null,"code":"var _jsxFileName = \"/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Content from './Content';\nimport Header from './Header';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport Forms from './Forms';\nimport ProfileContainer from './ProfileContainer'; // import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        email: \"\",\n        id: 0\n      },\n      token: \"\"\n    };\n\n    this.handleLoginSubmit = userInfo => {\n      console.log(\"Login form has been submitted\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        console.log(data);\n\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\");\n          });\n        }\n      });\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\");\n          });\n        }\n      });\n    };\n\n    this.renderForms = routerProps => {\n      if (routerProps.location.pathname === \"/login\") {\n        return React.createElement(Forms, {\n          formName: \"Login Form\",\n          handleSubmit: this.handleLoginSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      } else if (routerProps.location.pathname === \"/register\") {\n        return React.createElement(Forms, {\n          formName: \"Register Form\",\n          handleSubmit: this.handleRegisterSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderProfile = routerProps => {\n      return React.createElement(ProfileContainer, {\n        token: this.state.token,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      }).then(r => r.json()).then(data => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\");\n          });\n        }\n      });\n    }\n  } // addOneSnack = (snackObj) => {\n  //   let modifiedArray = [...this.state.user.snacks, snackObj]\n  //   this.setState({\n  //     user: {\n  //       ...this.state.user,\n  //       snacks: modifiedArray\n  //     }\n  //   })\n  // }\n\n\n  render() {\n    console.log(this.state, \"APP STATE\");\n    console.log(this.props, \"APP PROPS\");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: this.renderForms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: this.renderForms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: this.renderProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Content, {\n        key: 'content',\n        renderForms: this.ren,\n        handleRegisterSubmit: this.handleRegisterSubmit,\n        handleLoginSubmit: this.handleLoginSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Page not Found\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      exact: true,\n      from: \"/\",\n      to: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js"],"names":["React","Content","Header","Switch","Route","Redirect","withRouter","Forms","ProfileContainer","App","Component","state","user","email","id","token","handleLoginSubmit","userInfo","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","data","error","localStorage","setItem","setState","props","history","push","handleRegisterSubmit","renderForms","routerProps","location","pathname","renderProfile","componentDidMount","getItem","render","ren"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Content from './Content'\nimport Header from './Header'\nimport {Switch, Route, Redirect} from 'react-router'\nimport {withRouter} from 'react-router-dom'\nimport Forms from './Forms'\nimport ProfileContainer from './ProfileContainer'\n\n// import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n\n  state = {\n    user: {\n      email: \"\",\n      id: 0\n    },\n    token: \"\"\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\")\n\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      })\n      .then(r => r.json())\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token)\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\")\n          })\n        }\n      })\n\n\n    }\n  }\n\n  // addOneSnack = (snackObj) => {\n  //   let modifiedArray = [...this.state.user.snacks, snackObj]\n  //   this.setState({\n  //     user: {\n  //       ...this.state.user,\n  //       snacks: modifiedArray\n  //     }\n  //   })\n  // }\n\n  handleLoginSubmit = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(\"/profile\")\n        })\n\n      }\n    })\n\n  }\n\n  handleRegisterSubmit = (userInfo) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(\"/profile\")\n        })\n      }\n    })\n  }\n\n  renderForms = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <Forms formName=\"Login Form\" handleSubmit={this.handleLoginSubmit}/>\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <Forms formName=\"Register Form\" handleSubmit={this.handleRegisterSubmit}/>\n    }\n  }\n\n  renderProfile = (routerProps) => {\n    return <ProfileContainer token={this.state.token} user={this.state.user} />\n  }\n\n  render(){\n    console.log(this.state, \"APP STATE\")\n    console.log(this.props, \"APP PROPS\")\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path=\"/login\" render={ this.renderForms } />\n          <Route path=\"/register\" render={ this.renderForms } />\n          <Route path=\"/profile\" render={ this.renderProfile } />\n          <Route path=\"/\" exact render={() => <Content key={'content'} renderForms={this.ren} handleRegisterSubmit={this.handleRegisterSubmit} handleLoginSubmit={this.handleLoginSubmit}/> } />\n          <Route render={ () => <p>Page not Found</p> } />\n          <Redirect exact from=\"/\" to=\"login\" />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}