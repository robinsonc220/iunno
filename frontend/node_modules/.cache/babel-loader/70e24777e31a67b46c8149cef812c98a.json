{"ast":null,"code":"var _jsxFileName = \"/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/Components/Homepage.jsx\";\nimport React from 'react';\nimport { Divider } from 'semantic-ui-react';\nimport Quantity from './Quantity.jsx';\nimport OrderButton from './OrderButton.jsx';\nimport Confirmation from './Confirmation.jsx';\nexport default class Homepage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sessionQty: 0,\n      qtyTerm: \"\",\n      orderCreated: false\n    };\n\n    this.addQty = () => {\n      this.setState({\n        sessionQty: this.state.qtyTerm\n      });\n    };\n\n    this.handleOnChange = evt => {\n      this.setState({\n        qtyTerm: evt.target.value\n      });\n    };\n\n    this.createOrder = () => {\n      fetch(`http://localhost:3000/api/v1/orders`, {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          meal_id: this.props.randomMeal.id\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Accept\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => console.log(data)).then(this.setState({\n        orderCreated: true\n      }));\n    };\n\n    this.createOrderMeal = renderOrderContent = () => {\n      if (this.state.sessionQty > 0) {\n        return React.createElement(OrderButton, {\n          key: 'orderbutton',\n          sessionQty: this.state.sessionQty,\n          createOrder: this.createOrder,\n          chooseMeal: this.props.chooseMeal,\n          randomMeal: this.props.randomMeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      } else if (this.state.orderCreated === true) {\n        return React.createElement(Confirmation, {\n          key: 'confirmtion',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Quantity, {\n          key: 'quantity',\n          user: this.props.user,\n          qtyTerm: this.state.qtyTerm,\n          addQty: this.addQty,\n          handleOnChange: this.handleOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.randomMeal.id);\n    return React.createElement(React.Fragment, null, React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), this.renderOrderContent());\n  }\n\n}","map":{"version":3,"sources":["/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/Components/Homepage.jsx"],"names":["React","Divider","Quantity","OrderButton","Confirmation","Homepage","Component","state","sessionQty","qtyTerm","orderCreated","addQty","setState","handleOnChange","evt","target","value","createOrder","fetch","method","body","JSON","stringify","user_id","props","user","id","meal_id","randomMeal","headers","then","res","json","data","console","log","createOrderMeal","renderOrderContent","chooseMeal","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Divider } from 'semantic-ui-react'\nimport Quantity from './Quantity.jsx'\nimport OrderButton from './OrderButton.jsx'\nimport Confirmation from './Confirmation.jsx'\n\nexport default class Homepage extends React.Component {\n\n    state = {\n        sessionQty: 0,\n        qtyTerm: \"\",\n        orderCreated: false\n    }\n \n    addQty = () => {\n        this.setState({sessionQty: this.state.qtyTerm })\n    }\n\n\n    handleOnChange = (evt) => {\n        this.setState({qtyTerm: evt.target.value})\n\n    }\n\n    \n\n    createOrder = () => {\n\n        fetch(`http://localhost:3000/api/v1/orders`, {\n            method: 'POST',\n            body: JSON.stringify({\n              user_id: this.props.user.id, \n              meal_id: this.props.randomMeal.id\n              \n              \n            }),\n            headers:{\n              'Content-Type': 'application/json',\n              \"Accept\": \"application/json\"\n            }\n          })\n          .then(res => res.json())\n          .then(data => console.log(data))\n          .then(this.setState({orderCreated: true}))\n\n          \n    }\n\n    createOrderMeal =\n\n    renderOrderContent = () => {\n        if (this.state.sessionQty > 0) {\n          return <OrderButton key={'orderbutton'} sessionQty={this.state.sessionQty} createOrder={this.createOrder} chooseMeal={this.props.chooseMeal} randomMeal={this.props.randomMeal}/>\n        } else if (this.state.orderCreated === true) {\n          return <Confirmation key={'confirmtion'}/>\n        } else {\n          return <Quantity key={'quantity'} user={this.props.user} qtyTerm={this.state.qtyTerm} addQty={this.addQty} handleOnChange={this.handleOnChange}/>;\n        }\n      }\n\n    render() {\nconsole.log(this.props.randomMeal.id)\n        return (\n            <>\n                <Divider hidden/>\n                <Divider hidden/>\n                <Divider hidden/>\n                {this.renderOrderContent()}\n          </>\n\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}