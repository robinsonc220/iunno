{"ast":null,"code":"var _jsxFileName = \"/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import Content from './Components/Content.jsx'\n\nimport Header from './Components/Header.jsx';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport Forms from './Components/Forms.jsx';\nimport Welcome from './Components/Welcome';\nimport Homepage from './Components/Homepage'; // import ProfileContainer from './ProfileContainer'\n// import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {// email: \"\",\n        // id: 0\n      },\n      token: \"\",\n      allMeals: [],\n      randomMeal: [],\n      sessionOrder: {}\n    };\n\n    this.chooseMeal = () => {\n      this.setState({\n        randomMeal: this.state.allMeals[Math.floor(Math.random() * this.state.allMeals.length)]\n      });\n    };\n\n    this.handleLoginSubmit = userInfo => {\n      console.log(\"Login form has been submitted\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        console.log(data);\n\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/homepage\");\n          });\n        }\n      });\n      this.chooseMeal;\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      // debugger\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(data => {\n        console.log(data);\n\n        if (!data.error) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/homepage\");\n          });\n        }\n      });\n    };\n\n    this.renderForms = routerProps => {\n      if (routerProps.location.pathname === \"/login\") {\n        return React.createElement(Forms, {\n          formName: \"Login Form\",\n          log: this.log,\n          reg: this.reg,\n          handleSubmit: this.handleLoginSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      } else if (routerProps.location.pathname === \"/register\") {\n        return React.createElement(Forms, {\n          formName: \"Register Form\",\n          log: this.log,\n          reg: this.reg,\n          handleSubmit: this.handleRegisterSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  //   componentDidMount(){\n  //     fetch('http://localhost:3000/api/v1/meals')\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         console.log(data)\n  //         this.setState({\n  //           allMeals: data\n  //         });\n  //       })\n  // }\n  // renderContent = () => {\n  //     if (this.props.user) {\n  //       return <Homepage key={'homepage'} chooseMeal={this.chooseMeal} />;\n  //     } else {\n  //       return this.renderForms\n  //     }\n  // }\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      }).then(r => r.json()).then(data => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\");\n          });\n        }\n      });\n    }\n\n    fetch('http://localhost:3000/api/v1/meals').then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        allMeals: data\n      });\n    });\n  }\n\n  // renderProfile = (routerProps) => {\n  //   return <ProfileContainer token={this.state.token} user={this.state.user} />\n  // }\n  render() {\n    console.log(this.state, \"APP STATE\");\n    console.log(this.props, \"APP PROPS\");\n    console.log(this.state.allMeals, \"ALL MEALS\");\n    console.log(this.state.randomMeal, \"RANDOM MEAL\");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: this.renderForms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: this.renderForms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: this.renderProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/homepage\",\n      render: () => React.createElement(Homepage, {\n        chooseMeal: this.chooseMeal,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }),\n      randomMeal: this.state.randomMeal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Welcome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Page not Found\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/App.js"],"names":["React","Header","Switch","Route","Redirect","withRouter","Forms","Welcome","Homepage","App","Component","state","user","token","allMeals","randomMeal","sessionOrder","chooseMeal","setState","Math","floor","random","length","handleLoginSubmit","userInfo","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","data","error","localStorage","setItem","props","history","push","handleRegisterSubmit","renderForms","routerProps","location","pathname","reg","componentDidMount","getItem","res","render","renderProfile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n// import Content from './Components/Content.jsx'\nimport Header from './Components/Header.jsx'\nimport {Switch, Route, Redirect} from 'react-router'\nimport {withRouter} from 'react-router-dom'\nimport Forms from './Components/Forms.jsx'\nimport Welcome from './Components/Welcome'\nimport Homepage from './Components/Homepage';\n// import ProfileContainer from './ProfileContainer'\n\n// import dinner from './dinner.jpg'\n\nclass App extends React.Component {\n\n  state = {\n    user: {\n      // email: \"\",\n      // id: 0\n    },\n    token: \"\",\n    allMeals: [],\n    randomMeal: [],\n    sessionOrder: {}\n    \n  }\n  chooseMeal = () => {\n    this.setState({ randomMeal: this.state.allMeals[Math.floor(Math.random()*this.state.allMeals.length)] }) \n  }\n\n//   componentDidMount(){\n//     fetch('http://localhost:3000/api/v1/meals')\n//       .then(res => res.json())\n//       .then(data => {\n//         console.log(data)\n//         this.setState({\n//           allMeals: data\n//         });\n//       })\n// }\n\n\n    // renderContent = () => {\n    //     if (this.props.user) {\n    //       return <Homepage key={'homepage'} chooseMeal={this.chooseMeal} />;\n    //     } else {\n    //       return this.renderForms\n    //     }\n    // }\n\n\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\")\n\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${token}`\n        }\n      })\n      .then(r => r.json())\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token)\n          this.setState({\n            user: data.user,\n            token: data.token\n          }, () => {\n            this.props.history.push(\"/profile\")\n          })\n        }\n      })\n    }\n\n    fetch('http://localhost:3000/api/v1/meals')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          allMeals: data\n        });\n      })\n    }\n\n\n\n  handleLoginSubmit = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(\"/homepage\")\n        })\n\n      }\n    })\n\n    this.chooseMeal\n  }\n\n  handleRegisterSubmit = (userInfo) => {\n    // debugger\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(data => {\n      console.log(data)\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          user: data.user,\n          token: data.token\n        }, () => {\n          this.props.history.push(\"/homepage\")\n        })\n      }\n    })\n  }\n\n  renderForms = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <Forms formName=\"Login Form\" log={this.log} reg={this.reg} handleSubmit={this.handleLoginSubmit}/>\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <Forms formName=\"Register Form\" log={this.log} reg={this.reg} handleSubmit={this.handleRegisterSubmit}/>\n    }\n  }\n\n  // renderProfile = (routerProps) => {\n  //   return <ProfileContainer token={this.state.token} user={this.state.user} />\n  // }\n\n  render(){\n    console.log(this.state, \"APP STATE\")\n    console.log(this.props, \"APP PROPS\")\n    console.log(this.state.allMeals, \"ALL MEALS\")\n    console.log(this.state.randomMeal, \"RANDOM MEAL\")\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path=\"/login\" render={this.renderForms} />\n          <Route path=\"/register\" render={this.renderForms} />\n          <Route path=\"/profile\" render={ this.renderProfile } />\n    <Route path=\"/homepage\" render={() => <Homepage chooseMeal={this.chooseMeal} user={this.state.user}/>} randomMeal={this.state.randomMeal} />\n          <Route path=\"/\" exact render={() => <Welcome/> } />\n          <Route render={ () => <p>Page not Found</p> } />\n          {/* <Redirect exact from=\"/\" to=\"login\" /> */}\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}