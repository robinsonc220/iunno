{"ast":null,"code":"var _jsxFileName = \"/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/Content.js\";\nimport React from 'react';\nimport Homepage from './Homepage'; // import Forms from './Forms';\n// import dinner from './dinner.jpg'\n\nexport default class Content extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allMeals: [],\n      sessionUser: [],\n      randomMeal: [],\n      sessionOrder: []\n    };\n\n    this.chooseMeal = () => {\n      this.setState({\n        randomMeal: this.state.allMeals[Math.floor(Math.random() * this.state.allMeals.length)]\n      });\n    };\n\n    this.logIn = () => {\n      this.setState({\n        logged: true\n      });\n    };\n\n    this.renderContent = () => {\n      if (this.props.user) {\n        return React.createElement(Homepage, {\n          key: 'homepage',\n          allMeals: this.props.allMeals,\n          chooseMeal: this.props.chooseMeal,\n          randomMeal: this.props.randomMeal,\n          sessionUser: this.props.sessionUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      } else {\n        return this.props.renderForms;\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/meals').then(res => res.json()).then(data => console.log(data));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}","map":{"version":3,"sources":["/Users/ravenrosa/Desktop/Flatiron School/Mod5/iunno/frontend/src/Content.js"],"names":["React","Homepage","Content","Component","state","allMeals","sessionUser","randomMeal","sessionOrder","chooseMeal","setState","Math","floor","random","length","logIn","logged","renderContent","props","user","renderForms","componentDidMount","fetch","then","res","json","data","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;;AAEA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEnDC,KAFmD,GAE3C;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,YAAY,EAAE;AAJR,KAF2C;;AAAA,SAUrDC,UAVqD,GAUxC,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,QAAX,CAAoBM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,MAA7C,CAApB;AAAd,OAAd;AACD,KAZkD;;AAAA,SAcrDC,KAdqD,GAc7C,MAAM;AACV,WAAKL,QAAL,CAAc;AAACM,QAAAA,MAAM,EAAE;AAAT,OAAd;AACH,KAhBoD;;AAAA,SAyBjDC,aAzBiD,GAyBjC,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACnB,eAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAE,UAAf;AAA4B,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWb,QAAjD;AAA2D,UAAA,UAAU,EAAE,KAAKa,KAAL,CAAWT,UAAlF;AAA8F,UAAA,UAAU,EAAE,KAAKS,KAAL,CAAWX,UAArH;AAAiI,UAAA,WAAW,EAAE,KAAKW,KAAL,CAAWZ,WAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKY,KAAL,CAAWE,WAAlB;AACD;AACJ,KA/BgD;AAAA;;AAkBrDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFhB;AAGH;;AAWGG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKZ,aAAL,EADD,CADJ;AAKH;;AAvCgD","sourcesContent":["import React from 'react'\nimport Homepage from './Homepage'\n// import Forms from './Forms';\n// import dinner from './dinner.jpg'\n\nexport default class Content extends React.Component {\n\n  state = {\n    allMeals: [],\n    sessionUser: [],\n    randomMeal: [],\n    sessionOrder: []\n    \n}\n\nchooseMeal = () => {\n    this.setState({ randomMeal: this.state.allMeals[Math.floor(Math.random()*this.state.allMeals.length)] }) \n  }\n\nlogIn = () => {\n    this.setState({logged: true})\n}\n\ncomponentDidMount(){\n    fetch('http://localhost:3000/api/v1/meals')\n      .then(res => res.json())\n      .then(data => console.log(data));\n}\n\n\n    renderContent = () => {\n        if (this.props.user) {\n          return <Homepage key={'homepage'}  allMeals={this.props.allMeals} chooseMeal={this.props.chooseMeal} randomMeal={this.props.randomMeal} sessionUser={this.props.sessionUser}/>;\n        } else {\n          return this.props.renderForms\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {this.renderContent()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}